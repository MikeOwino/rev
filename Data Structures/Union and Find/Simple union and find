//Simple implementation

# include<bits/stdc++.h>

using namespace std;

void initialize( vector<int> &parent,int n){
    
    for( int i = 0 ; i < n ; i++)
    parent[i] = i;
}

int find( vector<int> parent, int x){
    
    if( parent[x] == x)
        return x;
        
    return find(parent, parent[x]);
}

void _union( vector<int> &parent, int x, int y){
    
    int x_rep = find(parent, x);
    int y_rep = find(parent, y);
    
    if( x_rep == y_rep)
        return;
        
    parent[y_rep] = x_rep;    
    return;
}

int main(void){
    
    int n = 5;
    vector<int> parent(n,0);
    initialize(parent, n);
    cout<<parent[3]<<endl;
    _union(parent,2,3);
    //cout<<parent[2]<<endl;
    cout<<parent[3]<<endl;
    _union(parent,3,4);
    
}
