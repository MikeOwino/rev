/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package chatclientinterface;

import java.awt.Color;
import java.awt.event.KeyEvent;
import static javafx.scene.paint.Color.color;
import static javafx.scene.paint.Color.color;

/**
 * La classe implementa un interfaccia grafica per la parte di scrittura e ricezione dei messaggi.
 * In essa infatti saranno presenti aree di testo per scrivere o visualizzare i messaggi degli 
 * utenti di una stanza
 * @author gabrielefedi
 */
public class ChatInterface extends javax.swing.JFrame {

    /**
     * Creates new form ChatInterface
     */
    public ChatInterface() {
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jScrollPaneView = new javax.swing.JScrollPane();
        jTextAreaView = new javax.swing.JTextArea();
        ButtonSend = new javax.swing.JButton();
        jButtonChange = new javax.swing.JButton();
        jButtonColor = new javax.swing.JButton();
        jTextFieldWrite = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextAreaUserNames = new javax.swing.JTextArea();
        jLabelRoomName = new javax.swing.JLabel();

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                formKeyTyped(evt);
            }
        });

        jTextAreaView.setEditable(false);
        jTextAreaView.setColumns(20);
        jTextAreaView.setRows(5);
        jScrollPaneView.setViewportView(jTextAreaView);

        ButtonSend.setText("send");
        ButtonSend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonSendActionPerformed(evt);
            }
        });

        jButtonChange.setText("Change Room");
        jButtonChange.setActionCommand("");
        jButtonChange.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonChangeActionPerformed(evt);
            }
        });

        jButtonColor.setText("Color");
        jButtonColor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonColorActionPerformed(evt);
            }
        });

        jTextFieldWrite.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldWriteActionPerformed(evt);
            }
        });

        jTextAreaUserNames.setColumns(20);
        jTextAreaUserNames.setRows(5);
        jScrollPane2.setViewportView(jTextAreaUserNames);

        jLabelRoomName.setFont(new java.awt.Font("Menlo", 1, 18)); // NOI18N
        jLabelRoomName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelRoomName.setText("jLabel1");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jButtonChange, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPaneView, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextFieldWrite, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jButtonColor)
                        .addGap(0, 201, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(ButtonSend, javax.swing.GroupLayout.DEFAULT_SIZE, 104, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(6, 6, 6))
            .addComponent(jLabelRoomName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jButtonChange, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelRoomName, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPaneView, javax.swing.GroupLayout.DEFAULT_SIZE, 189, Short.MAX_VALUE)
                    .addComponent(jScrollPane2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldWrite, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ButtonSend, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonColor)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Invia un messaggio alla stanza
     * @param evt Evento generato generato al cliccare del Button Send
     */
    private void ButtonSendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonSendActionPerformed
        // TODO add your handling code here:
        sendMessage();
    }//GEN-LAST:event_ButtonSendActionPerformed

    private void formKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyTyped
        // TODO add your handling code here:      
    }//GEN-LAST:event_formKeyTyped
    /**
     * Riporta all'interfaccia di scelta delle stanze.
     * @param evt Evento generato generato al cliccare del Button "Change Room".
     */
    private void jButtonChangeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonChangeActionPerformed
        // TODO add your handling code here:
        ChatClientInterface.sendToServer("RTR"+ChatClientInterface.nClient);
        this.setVisible(false);
        ChatClientInterface.choiseFrame.setVisible(true);
        jTextAreaView.setText("");
    }//GEN-LAST:event_jButtonChangeActionPerformed

    /**
     * Porta alla finestra per la scelta del colore del testo
     * @param evt Evendo generato al cliccare del Button "Color".
     */
    private void jButtonColorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonColorActionPerformed
        // TODO add your handling code here:
        boolean isPressed;
        
        
        isPressed = true;
        if(isPressed){
            ChatClientInterface.setColorFrame.setVisible(true);
            isPressed = false;
        }
       
    }//GEN-LAST:event_jButtonColorActionPerformed
    /**
     * Comunica al Server che l'utente si è scollegato
     * @param evt Evendo generato al cliccare della X della finestra.
     */
    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        ChatClientInterface.sendToServer("RFL"+ChatClientInterface.nClient);
        
        
    }//GEN-LAST:event_formWindowClosing

    /**
     * Invia un messaggio alla stanza
     * @param evt Evendo generato al premere del tasto Invio sulla tastiera se l'area di testo
     * è selezionata
     */
    private void jTextFieldWriteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldWriteActionPerformed
        // TODO add your handling code here:
        sendMessage();
    }//GEN-LAST:event_jTextFieldWriteActionPerformed

    /**
     * Medoto per l'invio del messaggio al Server che modificherà quest'ultimo in base agli
     * standard del protocollo
     */
    private void sendMessage(){
        String message;
        if(!(message=jTextFieldWrite.getText()).equals(""))
          ChatClientInterface.sendToServer("STR"+ChatClientInterface.nClient+'⧫'+ChatClientInterface.name+": "+message+'⧫');
        jTextFieldWrite.setText("");
    }
    
    /**
     * Aggiunge una stringa all'area di testo per la visualizzazione dei messaggi della stanza
     * @param msg messaggio da aggiungere
     */
    public void updateChat(String msg){
        jTextAreaView.append(msg+"\n");
    }
    
    /**
     * Inizializza l'etichetta del nome della stanza
     * @param s nome della stanza
     */
    public void setRoomName(String s){
        jLabelRoomName.setText(s);
    }
    
    /**
     * Inizializza l'area di testo dove vengono visualizzati i nomi degli utenti connessi alla
     * stanza
     */
     public void initializeUserNameArea(){
        
        if(ChatClientInterface.UsersRoomNames.size()!=0){
            jTextAreaUserNames.setText("");
            for(int i=0;i<ChatClientInterface.UsersRoomNames.size();i++)
                jTextAreaUserNames.append(""+((String)ChatClientInterface.UsersRoomNames.get(i))+"\n");
        }        //jTextAreaUserNames.setText(""+ChatClientInterface.UsersRoomNames);
    }
     
     /**
      * Setta il colore del testo.
      */
    public void setTextColor(){
        String sColor;
        int iColor;
        Color c;
        c = ChatClientInterface.setColorFrame.SelectedColor();
        jTextFieldWrite.setForeground(c);
        jTextAreaView.setForeground(c);     
        sColor = Integer.toString(c.getRGB());
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ChatInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ChatInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ChatInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ChatInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ChatInterface().setVisible(true);
                 
                
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ButtonSend;
    private javax.swing.JButton jButtonChange;
    private javax.swing.JButton jButtonColor;
    private javax.swing.JLabel jLabelRoomName;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPaneView;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextAreaUserNames;
    private javax.swing.JTextArea jTextAreaView;
    private javax.swing.JTextField jTextFieldWrite;
    // End of variables declaration//GEN-END:variables

}